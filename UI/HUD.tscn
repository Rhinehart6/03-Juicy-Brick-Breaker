[gd_scene load_steps=9 format=2]

[ext_resource path="res://UI/HUD.gd" type="Script" id=1]
[ext_resource path="res://Assets/Kenney Blocks.ttf" type="DynamicFontData" id=2]

[sub_resource type="DynamicFont" id=3]
size = 20
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=4]
size = 20
font_data = ExtResource( 2 )

[sub_resource type="Shader" id=5]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;

const float PI = 3.1415926535;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/strength = 0.5
shader_param/speed = 0.5
shader_param/angle = 0.0

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 1, 1, 1, 1 )

[sub_resource type="StyleBoxEmpty" id=2]

[node name="HUD" type="Control"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="Background" type="ColorRect" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -29.0
color = Color( 0, 0, 0, 0.25098 )

[node name="Background2" type="ColorRect" parent="."]
anchor_right = 1.0
margin_top = 10.0
margin_bottom = 50.0
color = Color( 0, 0, 0, 0.25098 )

[node name="Score" type="Label" parent="."]
margin_left = 30.0
margin_right = 220.0
margin_bottom = 60.0
custom_fonts/font = SubResource( 3 )
text = "Score: "
valign = 1

[node name="Time" type="Label" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -220.0
margin_right = -50.0
margin_bottom = 60.0
custom_fonts/font = SubResource( 4 )
text = "Time: "
align = 2
valign = 1

[node name="Fever" type="ProgressBar" parent="."]
material = SubResource( 6 )
anchor_left = 0.5
anchor_right = 0.5
margin_left = -200.0
margin_top = 20.0
margin_right = 200.0
margin_bottom = 45.0
rect_min_size = Vector2( 400, 25 )
custom_styles/fg = SubResource( 1 )
custom_styles/bg = SubResource( 2 )
percent_visible = false

[node name="Indicator_Container" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Timer" type="Timer" parent="."]
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
